#include "${include_filename}"

GRAPHICAL_MODEL model_seg

frame: 0 {
   variable: segCountDown {
     type: TYPE_SEGCOUNTDOWN;
     conditionalparents: state(0) using DeterministicCPT("state_segCountDown");
   }

   variable: state {
     type: TYPE_STATE;
     conditionalparents: nil using DenseCPT("start_state");
   }

   variable: seg {
     type: TYPE_SEG;
     conditionalparents: CONDITIONALPARENTS_SEG;
   }

${observations}}

frame: 1 {
   variable: frameIndex {
     type: discrete observed value frameNum cardinality CARD_FRAMEINDEX;
     conditionalparents: CONDITIONALPARENTS_NIL;
   }

   variable: ruler {
     type: discrete hidden cardinality CARD_RULER;
     conditionalparents: frameIndex(0) using DeterministicCPT("frameIndex_ruler");
   }

   variable: segCountDown {
     type: TYPE_SEGCOUNTDOWN;
     conditionalparents: segTransition(0), ruler(0), state(0), segCountDown(-1)
                         using DeterministicCPT("segTransition_ruler_state_segCountDown_segCountDown");
   }

   variable: segTransition {
     type: discrete hidden cardinality CARD_SEGTRANSITION;
     conditionalparents: segCountDown(-1), state(-1) using DenseCPT("segCountDown_state_segTransition");
   }

   variable: state {
     type: TYPE_STATE;
     conditionalparents: state(-1) using DeterministicCPT("state_state_copy")
                         | state(-1) using DenseCPT("state_state");
     switchingparents: segTransition(0) using mapping("map_parent");
   }

   variable: seg {
     type: TYPE_SEG;
     conditionalparents: CONDITIONALPARENTS_SEG;
   }

${observations}}

chunk 1:1
